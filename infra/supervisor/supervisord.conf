[unix_http_server]
file=/tmp/supervisor.sock

[supervisord]
logfile=/Volumes/Samsung_T5/var/log/hazoo/supervisord.log
pidfile=/tmp/supervisord.pid
childlogdir=/Volumes/Samsung_T5/var/log/hazoo

[rpcinterface:supervisor]
supervisor.rpcinterface_factory=supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock

; ----- Programs -----
[include]
files = /opt/homebrew/etc/supervisor.d/*.ini

; Redis (foreground)
# [program:redis]
# command=/bin/sh -lc 'exec /opt/homebrew/opt/redis/bin/redis-server /opt/homebrew/etc/redis.conf --daemonize no'
# autostart=true
# autorestart=true
# startsecs=2
# stopsignal=TERM
# stopasgroup=true
# killasgroup=true
# stdout_logfile=/Volumes/Samsung_T5/var/log/hazoo/redis.out
# stderr_logfile=/Volumes/Samsung_T5/var/log/hazoo/redis.err
# environment=SPRING_DATA_REDIS_HOST="127.0.0.1",SPRING_DATA_REDIS_PORT="6379",SPRING_DATA_REDIS_SSL="false"
# redirect_stderr=true

; ZooKeeper (foreground)
# [program:zookeeper]
# command=/bin/sh -lc "$ZOOKEEPER_HOME/bin/zkServer.sh start-foreground"
# autostart=true
# autorestart=true
# stdout_logfile=/Volumes/Samsung_T5/var/log/hazoo/zookeeper.out
# stderr_logfile=/Volumes/Samsung_T5/var/log/hazoo/zookeeper.err
# environment=JAVA_HOME="/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home", ZOOKEEPER_HOME="/Volumes/Samsung_T5/zookeeper"

# ; HDFS NameNode (foreground)
# [program:hdfs-nn]
# command=/bin/sh -lc "exec hdfs namenode"
# autostart=true
# autorestart=true
# stdout_logfile=/Volumes/Samsung_T5/var/log/hazoo/hdfs-nn.out
# stderr_logfile=/Volumes/Samsung_T5/var/log/hazoo/hdfs-nn.err
# environment=JAVA_HOME="/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home", HADOOP_HOME="/Volumes/Samsung_T5/hadoop", HADOOP_CONF_DIR="/Volumes/Samsung_T5/hadoop/etc/hadoop", HADOOP_NICENESS="0", PATH="/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin:/Volumes/Samsung_T5/hadoop/bin:/Volumes/Samsung_T5/hadoop/sbin:%(ENV_PATH)s"

# ; HDFS DataNode (waits for NN RPC 8020)
# [program:hdfs-dn]
# command=/bin/sh -lc 'until nc -z 127.0.0.1 8020; do sleep 1; done; exec hdfs datanode'
# autostart=true
# autorestart=true
# stdout_logfile=/Volumes/Samsung_T5/var/log/hazoo/hdfs-dn.out
# stderr_logfile=/Volumes/Samsung_T5/var/log/hazoo/hdfs-dn.err
# environment=JAVA_HOME="/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home", HADOOP_HOME="/Volumes/Samsung_T5/hadoop", HADOOP_CONF_DIR="/Volumes/Samsung_T5/hadoop/etc/hadoop", HADOOP_NICENESS="0", PATH="/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin:/Volumes/Samsung_T5/hadoop/bin:/Volumes/Samsung_T5/hadoop/sbin:%(ENV_PATH)s"

# ; Accumulo Manager (waits for ZK + NN)
# [program:accumulo-manager]
# command=/bin/sh -lc 'until echo ruok | nc -w 1 127.0.0.1 2181 | grep -q imok; do sleep 1; done; \
#                      until nc -z 127.0.0.1 8020; do sleep 1; done; exec accumulo manager'
# autostart=true
# autorestart=true
# stdout_logfile=/Volumes/Samsung_T5/var/log/hazoo/accumulo-manager.out
# stderr_logfile=/Volumes/Samsung_T5/var/log/hazoo/accumulo-manager.err
# environment=JAVA_HOME="/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home", ACCUMULO_HOME="/Volumes/Samsung_T5/accumulo", HADOOP_HOME="/Volumes/Samsung_T5/hadoop", HADOOP_CONF_DIR="/Volumes/Samsung_T5/hadoop/etc/hadoop", PATH="/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin:/Volumes/Samsung_T5/accumulo/bin:/Volumes/Samsung_T5/hadoop/bin:%(ENV_PATH)s"

# [program:accumulo-tserver]
# command=/bin/sh -lc 'exec accumulo tserver'
# autostart=true
# autorestart=true
# stdout_logfile=/Volumes/Samsung_T5/var/log/hazoo/accumulo-tserver.out
# stderr_logfile=/Volumes/Samsung_T5/var/log/hazoo/accumulo-tserver.err
# environment=JAVA_HOME="/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home", ACCUMULO_HOME="/Volumes/Samsung_T5/accumulo", PATH="/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin:/Volumes/Samsung_T5/accumulo/bin:%(ENV_PATH)s"

# [program:accumulo-monitor]
# command=/bin/sh -lc 'exec accumulo monitor'
# autostart=true
# autorestart=true
# stdout_logfile=/Volumes/Samsung_T5/var/log/hazoo/accumulo-monitor.out
# stderr_logfile=/Volumes/Samsung_T5/var/log/hazoo/accumulo-monitor.err
# environment=JAVA_HOME="/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home", ACCUMULO_HOME="/Volumes/Samsung_T5/accumulo", PATH="/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin:/Volumes/Samsung_T5/accumulo/bin:%(ENV_PATH)s"

# [program:accumulo-gc]
# command=/bin/sh -lc 'exec accumulo gc'
# autostart=true
# autorestart=true
# stdout_logfile=/Volumes/Samsung_T5/var/log/hazoo/accumulo-gc.out
# stderr_logfile=/Volumes/Samsung_T5/var/log/hazoo/accumulo-gc.err
# environment=JAVA_HOME="/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home", ACCUMULO_HOME="/Volumes/Samsung_T5/accumulo", PATH="/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin:/Volumes/Samsung_T5/accumulo/bin:%(ENV_PATH)s"

# [program:haz-microservice]
# directory=/Volumes/Samsung_T5/d4m-microservice
# command=/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java -jar /Volumes/Samsung_T5/d4m-microservice/d4m.acc.microservice-0.0.1.jar --server.port=5102 --accumulo.client.props=file:///Volumes/Samsung_T5/accumulo/conf/accumulo-client.properties
# autostart=false
# autorestart=true
# stdout_logfile=/Volumes/Samsung_T5/var/log/hazoo/haz-microservice.out
# stderr_logfile=/Volumes/Samsung_T5/var/log/hazoo/haz-microservice.err

; /etc/supervisor/conf.d/d4mService.conf
# [program:d4mService]
# command=/usr/bin/env bash -lc 'exec julia --project=/opt/d4m --startup-file=no /opt/d4m/main.jl'
# directory=/opt/d4m
# user=root

# autostart=true
# autorestart=true
# startsecs=2
# startretries=3

# stopsignal=TERM          ; triggers your atexit/HTTP.shutdown
# stopasgroup=true
# killasgroup=true
# stopwaitsecs=25

# environment=JULIA_PROJECT="/opt/d4m",JULIA_NUM_THREADS="auto",PORT="5101",CONFIG_PATH="/opt/d4m/config.toml",JULIA_HISTORY=""

# stdout_logfile=/var/log/d4m/service.out.log
# stderr_logfile=/var/log/d4m/service.err.log
# redirect_stderr=true
# stdout_logfile_maxbytes=50MB
# stdout_logfile_backups=5
# [group:mic]
# programs=redis,haz-microservice

# [group:hazoo]
# programs=zookeeper,hdfs-nn,hdfs-dn,accumulo-manager,accumulo-tserver,accumulo-monitor,accumulo-gc